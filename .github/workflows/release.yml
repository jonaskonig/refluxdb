name: Build & Release InfluxDB3 Unlocked  
  
on:  
  workflow_dispatch:  
  
permissions:  
  contents: write  
  packages: write  
  
env:  
  CARGO_INCREMENTAL: "yes"  
  CARGO_NET_GIT_FETCH_WITH_CLI: "false"  
  PROFILE: "release"  
  FEATURES: "aws,gcp,azure,jemalloc_replacing_malloc"  
  PACKAGE: "influxdb3"  
  PBS_DATE: "unset"  
  PBS_VERSION: "unset"  
  
jobs:  
  build-binary:  
    name: Build Binary (${{ matrix.target }})  
    runs-on: ${{ matrix.runner }}  
    strategy:  
      matrix:  
        include:  
          - target: x86_64-unknown-linux-gnu  
            runner: ubuntu-latest  
            arch: amd64  
          - target: aarch64-unknown-linux-gnu  
            runner: ubuntu-24.04-arm64  
            arch: arm64  
    outputs:  
      version: ${{ steps.extract-version.outputs.version }}  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v4  
        with:  
          repository: metrico/influxdb3-unlocked  
          ref: unlocked  
  
      - name: Install Rust  
        uses: dtolnay/rust-toolchain@stable  
  
      - name: Install target  
        run: rustup target add ${{ matrix.target }}  
  
      - name: Cache Rust dependencies  
        uses: actions/cache@v3  
        with:  
          path: |  
            ~/.cargo/registry  
            ~/.cargo/git  
            target  
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}  
          restore-keys: |  
            ${{ runner.os }}-${{ matrix.arch }}-cargo-  
  
      - name: Install dependencies  
        run: |  
          sudo apt update  
          sudo apt install -y binutils build-essential curl pkg-config libssl-dev clang lld git patchelf protobuf-compiler zstd libz-dev python3-dev python3-pip  
  
      - name: Fetch Python Build Standalone  
        run: |  
          PBS_DATE="20250612"  
          PBS_VERSION="3.13.5"  
          .circleci/scripts/fetch-python-standalone.bash "python-artifacts" "${PBS_DATE}" "${PBS_VERSION}"  
          tar -C python-artifacts -zxf python-artifacts/all.tar.gz "./${{ matrix.target }}"
  
      - name: Setup PYO3 environment  
        run: |  
          echo "PYO3_CONFIG_FILE=${PWD}/python-artifacts/${{ matrix.target }}/pyo3_config_file.txt" >> $GITHUB_ENV  
          echo "PYO3_CROSS_PYTHON_VERSION=3.13" >> $GITHUB_ENV  
  
      - name: Build binary  
        run: |  
          cargo build --package="$PACKAGE" --profile="$PROFILE" --target="${{ matrix.target }}" --no-default-features --features="$FEATURES"  
          objcopy --compress-debug-sections "target/${{ matrix.target }}/$PROFILE/$PACKAGE"  
  
      - name: Adjust RPATH for Linux  
        run: |  
          patchelf --set-rpath '$ORIGIN/python/lib:$ORIGIN/../lib/influxdb3/python/lib' \  
            "target/${{ matrix.target }}/$PROFILE/$PACKAGE"  
  
      - name: Extract version  
        id: extract-version  
        run: |  
          VERSION=$(./target/${{ matrix.target }}/$PROFILE/$PACKAGE --version | cut -d' ' -f2 | cut -d',' -f1)  
          echo "version=$VERSION" >> $GITHUB_OUTPUT  
          echo "Extracted version: $VERSION"  
  
      - name: Create release archive  
        run: |  
          mkdir -p release/${{ matrix.target }}  
          cp "./target/${{ matrix.target }}/$PROFILE/$PACKAGE" release/${{ matrix.target }}/influxdb3  
          # Include the Python runtime  
          cp -r "python-artifacts/${{ matrix.target }}/python" release/${{ matrix.target }}/  
  
      - name: Upload binary artifact  
        uses: actions/upload-artifact@v4  
        with:  
          name: influxdb3-${{ matrix.target }}  
          path: ./release/${{ matrix.target }}/  
          retention-days: 1  
  
      - name: Release  
        uses: softprops/action-gh-release@v2  
        if: github.ref_type == 'tag'  
        with:  
          files: |  
            ./release/${{ matrix.target }}/influxdb3
