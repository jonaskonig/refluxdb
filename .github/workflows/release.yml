name: Build & Release InfluxDB3 Unlocked  
  
on:  
  workflow_dispatch:  
  
permissions:  
  contents: write  
  packages: write  
  
env:  
  CARGO_INCREMENTAL: "yes"  
  CARGO_NET_GIT_FETCH_WITH_CLI: "false"  
  PROFILE: "release"  
  FEATURES: "aws,gcp,azure,jemalloc_replacing_malloc"  
  PACKAGE: "influxdb3"  
  PBS_DATE: "unset"  
  PBS_VERSION: "unset"  
  
jobs:  
  build-binary:  
    name: Build Binary (${{ matrix.arch }})  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        include:  
          - target: x86_64-unknown-linux-gnu  
            arch: amd64  
          - target: aarch64-unknown-linux-gnu  
            arch: arm64  
    outputs:  
      version: ${{ env.VERSION }}  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v4  
        with:  
          repository: refluxdb/refluxdb  
          ref: main  
  
      - name: Install Rust  
        uses: dtolnay/rust-toolchain@stable  
        
      - name: Install target  
        run: rustup target add ${{ matrix.target }}  
  
      - name: Cache Rust dependencies  
        uses: actions/cache@v3  
        with:  
          path: |  
            ~/.cargo/registry  
            ~/.cargo/git  
            target  
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}  
          restore-keys: |  
            ${{ runner.os }}-cargo-${{ matrix.target }}-  
            ${{ runner.os }}-cargo-  
  
      - name: Install dependencies  
        run: |  
          sudo apt update  
          sudo apt install -y binutils build-essential curl pkg-config libssl-dev clang lld git patchelf protobuf-compiler zstd libz-dev python3-dev python3-pip  
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then  
            sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu  
          fi  
  
      - name: Build binary  
        run: |  
          cargo build --package="$PACKAGE" --profile="$PROFILE" --target="${{ matrix.target }}" --no-default-features --features="$FEATURES"  
          objcopy --compress-debug-sections "target/${{ matrix.target }}/$PROFILE/$PACKAGE"  
        env:  
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc  
  
      - name: Extract version  
        run: |  
          VERSION=$(file "target/${{ matrix.target }}/$PROFILE/$PACKAGE" | grep -q "ARM aarch64" && echo "cross-compiled" || ./target/${{ matrix.target }}/$PROFILE/$PACKAGE --version | cut -d' ' -f2 | cut -d',' -f1)  
          if [ "$VERSION" = "cross-compiled" ]; then  
            VERSION=$(strings "target/${{ matrix.target }}/$PROFILE/$PACKAGE" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+' | head -1)  
          fi  
          echo "VERSION=$VERSION" >> $GITHUB_ENV  
          echo "Extracted version: $VERSION"  
  
      - name: Create release archive  
        run: |  
          mkdir -p release  
          cp "./target/${{ matrix.target }}/$PROFILE/$PACKAGE" release/influxdb3-${{ matrix.arch }}  
  
      - name: Upload binary artifact  
        uses: actions/upload-artifact@v4  
        with:  
          name: influxdb3-${{ matrix.arch }}  
          path: ./release/influxdb3-${{ matrix.arch }}  
          retention-days: 1  
  
      - name: Release  
        uses: softprops/action-gh-release@v2  
        if: github.ref_type == 'tag'  
        with:  
          files: |  
            ./release/influxdb3-${{ matrix.arch }}  
              
  
