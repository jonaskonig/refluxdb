name: Build Multi-Platform Docker Image  
  
on:  
  workflow_dispatch:  
  
permissions:  
  packages: write  
  contents: read  
  
env:  
  REGISTRY: ghcr.io  
  IMAGE_NAME: ${{ github.repository }}  
  
jobs:  
  build-docker:  
    name: Build Docker (${{ matrix.platform }})  
    runs-on: ${{ matrix.runner }}  
    strategy:  
      matrix:  
        include:  
          - platform: linux/amd64  
            runner: ubuntu-latest  
            arch: amd64  
          - platform: linux/arm64  
            runner: ubuntu-22.04-arm
            arch: arm64  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v4  
  
      - name: Set up Docker Buildx  
        uses: docker/setup-buildx-action@v3  
  
      - name: Log in to GitHub Container Registry  
        uses: docker/login-action@v3  
        with:  
          registry: ${{ env.REGISTRY }}  
          username: ${{ github.actor }}  
          password: ${{ secrets.GITHUB_TOKEN }}  
  
      - name: Extract metadata  
        id: meta  
        uses: docker/metadata-action@v5  
        with:  
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}  
          tags: |  
            type=ref,event=branch  
            type=ref,event=pr  
            type=sha,prefix={{branch}}-  
            type=raw,value=latest,enable={{is_default_branch}}  
  
      - name: Set build profile based on branch  
        id: profile  
        run: |  
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then  
            echo "profile=release" >> $GITHUB_OUTPUT  
          else  
            echo "profile=quick-release" >> $GITHUB_OUTPUT  
          fi  
      - name: Set build parameters  
        id: build-params  
        run: |  
          if [ "${{ matrix.arch }}" = "arm64" ]; then  
            echo "cargo_jobs=8" >> $GITHUB_OUTPUT  
            echo "profile=quick-release" >> $GITHUB_OUTPUT  
          else  
            echo "cargo_jobs=12" >> $GITHUB_OUTPUT  
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then  
              echo "profile=release" >> $GITHUB_OUTPUT  
            else  
              echo "profile=quick-release" >> $GITHUB_OUTPUT  
            fi  
          fi 
      - name: Build Docker image  
        uses: docker/build-push-action@v6  
        with:  
          context: .  
          platforms: ${{ matrix.platform }}  
          push: false  
          load: true  
          tags: influxdb3-core:latest-${{ matrix.arch }}  
          build-args: |  
            CARGO_INCREMENTAL=no  
            CARGO_NET_GIT_FETCH_WITH_CLI=true  
            CARGO_BUILD_JOBS=${{ steps.build-params.outputs.cargo_jobs }}  
            PROFILE=${{ steps.build-params.outputs.profile }}  
            FEATURES=aws,gcp,azure,jemalloc_replacing_malloc,tokio_console  
            PACKAGE=influxdb3  
            PBS_DATE=20250612  
            PBS_VERSION=3.13.5  
          cache-from: type=gha,scope=${{ matrix.arch }}  
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}
  
      - name: Save Docker image  
        run: |  
          docker save influxdb3-core:latest-${{ matrix.arch }} > influxdb3-core-${{ matrix.arch }}.tar  
  
      - name: Upload image artifact  
        uses: actions/upload-artifact@v4  
        with:  
          name: docker-image-${{ matrix.arch }}  
          path: influxdb3-core-${{ matrix.arch }}.tar  
          retention-days: 1  
  
  publish-docker:  
    name: Publish Multi-Platform Image  
    runs-on: ubuntu-latest  
    needs: build-docker  
    if: github.event_name != 'pull_request'  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v4  
  
      - name: Set up Docker Buildx  
        uses: docker/setup-buildx-action@v3  
  
      - name: Log in to GitHub Container Registry  
        uses: docker/login-action@v3  
        with:  
          registry: ${{ env.REGISTRY }}  
          username: ${{ github.actor }}  
          password: ${{ secrets.GITHUB_TOKEN }}  
  
      - name: Download AMD64 image  
        uses: actions/download-artifact@v4  
        with:  
          name: docker-image-amd64  
  
      - name: Download ARM64 image  
        uses: actions/download-artifact@v4  
        with:  
          name: docker-image-arm64  
  
      - name: Load images  
        run: |  
          docker load < influxdb3-core-amd64.tar  
          docker load < influxdb3-core-arm64.tar  
  
      - name: Extract metadata  
        id: meta  
        uses: docker/metadata-action@v5  
        with:  
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}  
          tags: |  
            type=ref,event=branch  
            type=sha,prefix={{branch}}-  
            type=raw,value=latest,enable={{is_default_branch}}  
  
      - name: Tag and push images  
        run: |  
          IMAGE_BASE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"  
            
          # Tag for each architecture  
          docker tag influxdb3-core:latest-amd64 "${IMAGE_BASE}:${{ github.sha }}-amd64"  
          docker tag influxdb3-core:latest-arm64 "${IMAGE_BASE}:${{ github.sha }}-arm64"  
            
          # Push architecture-specific images  
          docker push "${IMAGE_BASE}:${{ github.sha }}-amd64"  
          docker push "${IMAGE_BASE}:${{ github.sha }}-arm64"  
            
          # Create and push multi-arch manifest  
          docker manifest create "${IMAGE_BASE}:${{ github.sha }}" \  
            --amend "${IMAGE_BASE}:${{ github.sha }}-amd64" \  
            --amend "${IMAGE_BASE}:${{ github.sha }}-arm64"  
            
          docker manifest annotate "${IMAGE_BASE}:${{ github.sha }}" \  
            "${IMAGE_BASE}:${{ github.sha }}-amd64" --arch amd64 --os linux  
          docker manifest annotate "${IMAGE_BASE}:${{ github.sha }}" \  
            "${IMAGE_BASE}:${{ github.sha }}-arm64" --arch arm64 --os linux  
            
          docker manifest push "${IMAGE_BASE}:${{ github.sha }}"  
            
          # If main branch, also tag as latest  
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then  
            docker manifest create "${IMAGE_BASE}:latest" \  
              --amend "${IMAGE_BASE}:${{ github.sha }}-amd64" \  
              --amend "${IMAGE_BASE}:${{ github.sha }}-arm64"  
              
            docker manifest annotate "${IMAGE_BASE}:latest" \  
              "${IMAGE_BASE}:${{ github.sha }}-amd64" --arch amd64 --os linux  
            docker manifest annotate "${IMAGE_BASE}:latest" \  
              "${IMAGE_BASE}:${{ github.sha }}-arm64" --arch arm64 --os linux  
              
            docker manifest push "${IMAGE_BASE}:latest"  
          fi
